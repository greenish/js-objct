/*! 
 * objct - v0.x (https://github.com/greenish/js-objct)
 * 
 * Copyright (c) 2015 Philipp Adrian (www.philippadrian.com)
 *
 * The MIT Licence (http://opensource.org/licenses/MIT)
 */
!function(t){"use strict";var n=function(){},e=function(){return{}},o="jmuMMRs6AUUG29",r=o+"3HXcs8Z0ofQlkG0hqiNAJlZq2hHYakBQmyfnRuCsh2yf+c6m",i=new RegExp("\\b"+o+"\\b"),a="function",u="object",f=Array.toString(),c=Array.isArray||function(t){return typeof t==u&&"[object Array]"===Object.prototype.toString.call(t)||"constructor"in t&&String(t.constructor)===f},s=function(t){var n=typeof t;return n===a||n===u&&!c(t)},p=function(t,e){var o,r,i=typeof t===a;return n.prototype=i?t.prototype:t,o=new n,n.prototype=null,i&&(r=t.apply(o,e),s(r))?r:o},y=function(t,n){for(var e in n)t[e]=n[e]},h=function(t,n){var e,o=1,r=typeof t[0].obj===a?p(t[0].obj,n.a):t[0].obj;for(n.i=n.i||r;o<t.length;o++)e=t[o].isFactory?t[o].obj.call(l,t[o],n):t[o].obj,typeof e===a?(y(r,e.prototype),e.apply(r,n.a)):y(r,e);return r},l=function(){return Array.prototype.unshift.call(arguments,e),l.extend.apply(this,arguments)};l.extend=function(){for(var t,n=function(t,n){"jmuMMRs6AUUG29";if(this&&"string"==typeof this.hash&&this.hash.search(o)>=0){if(t.m=e.m,this.hash===r)return h(e.m,n);e.a=n.a}else e.a=arguments;var i=h(e.m,e);return i},e={a:[],m:[],i:!1},f=arguments,c=this instanceof l||this instanceof l.extend,p=0;p<f.length;p++){if(t=typeof f[p],!s(f[p]))throw"objct: Unexpected '"+(t===u?"array":t)+"'! Only 'functions' and 'objects' can be used with the objct.";e.m.push({obj:f[p],isFactory:t===a&&i.test(f[p])}),c||t!==a||y(n,f[p],e)}return c?new n:n},t.exports=l,typeof define===a&&define.amd?define(function(){return l}):typeof window===u&&(window.objct=l)}("undefined"==typeof module?{}:module);